#!/bin/bash

#ファイルの初期化
rm -f apache_output.txt

# whoisコマンドがインストールされていない場合はインストールする
if ! command -v whois &> /dev/null; then
  yum install -y whois
fi

# 対象のログファイル

myip=$(curl --silent inet-ip.info)
AWS=`printf '\033[32m%s\033[m\n' 'AWS!!'`

default() {
access_log=$(find /var/log/httpd/ -follow -name "*access_log")
access_log_name=$(find /var/log/httpd/ -follow -name "*access_log")
# ログの有無をチェック
if [ -z "$access_log" ] || [ ! -e "$access_log" ]; then
    echo "access_log not found"
    echo "default path is \"/var/log/httpd/\""
    exit 1
else
    echo "次のログを調査します" $access_log_name
    echo "↓"$(date "+%Y/%m/%d %H"時代\(現在時刻\)のアクセス)"↓"
    echo "-----------------------------------------------------------------------------"
    echo "ドメイン 最多IP(/32) 最多IP(/24) 最多IP(/16)" >> apache_output.txt 
    grep -h $(date +"%d/%b/%Y:%H:") $access_log | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -v $myip | awk '{print $2}' | sort | uniq -c | sort -nr | head -n 10 | while read count domain ; do
        count_and_ip=$(grep -h $(date +"%d/%b/%Y:%H:") $access_log | grep $domain | awk '{print $1}' | sort | uniq -c | sort -nr | head -n 1 )
        ip_count=$(echo ${count_and_ip} | awk '{print $1}')
        ip=$(echo ${count_and_ip} | awk '{print $2}')
        count_and_ip_24=$(grep -h $(date +"%d/%b/%Y:%H:") $access_log | grep $domain | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -Eo '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.' | sort | uniq -c | sort -nr | head -n 1 )
        ip_count_24=$(echo ${count_and_ip_24} | awk '{print $1}')
        ip_24=$(echo ${count_and_ip_24} | awk '{print $2}')
        count_and_ip_16=$(grep -h $(date +"%d/%b/%Y:%H:") $access_log | grep $domain | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -Eo '^[0-9]{1,3}\.[0-9]{1,3}\.' | sort | uniq -c | sort -nr | head -n 1 )
        ip_count_16=$(echo ${count_and_ip_16} | awk '{print $1}')
        ip_16=$(echo ${count_and_ip_16} | awk '{print $2}')
        echo "[${count}]${domain} [${ip_count}]${ip} [${ip_count_24}]${ip_24} [${ip_count_16}]${ip_16}" >> apache_output.txt
    done
    column -t < apache_output.txt
    echo ""
    echo "whois check"
    grep -h $(date +"%d/%b/%Y:%H:") $access_log |grep -v $myip | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|[0-9]{1,3}\.0\.0\.0' | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | sort | uniq -c | sort -nr | head -n 10 | while read IP_COUNT IP ; do
    whois_ip=$(whois $IP |grep -i "country" | awk '{print $NF}' |sort | uniq -c | sort -nr | head -n 1 | awk '{print $NF}')
    if [ "$whois_ip" = "JP" ]; then
     whois_ip_print=`printf '\033[31m%s\033[m\n' "JP"`
    else
      whois_ip_print="$whois_ip"
    fi
    aws=`whois $IP |grep -i "aws"`
    echo "$IP_COUNT $IP $whois_ip_print ${aws:+$AWS}"
    done
    echo "-----------------------------------------------------------------------------"
fi

rm -f apache_output.txt

#１時間前
if [ -z "$access_log" ] || [ ! -e "$access_log" ]; then
    echo "/var/log/httpd/*access_log not found"
else
    echo "↓"$(date --date="-1 hour" "+%Y/%m/%d %H"時代\(現在時刻\)のアクセス)"↓"
    echo "-----------------------------------------------------------------------------"
    echo "ドメイン 最多IP(/32) 最多IP(/24) 最多IP(/16)" >> apache_output.txt 
    grep -h $(date --date="-1 hour" +"%d/%b/%Y:%H:") $access_log | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -v $myip | awk '{print $2}' | sort | uniq -c | sort -nr | head -n 10 | while read count domain ; do
        count_and_ip=$(grep -h $(date --date="-1 hour" +"%d/%b/%Y:%H:") $access_log | grep $domain | awk '{print $1}' | sort | uniq -c | sort -nr | head -n 1 )
        ip_count=$(echo ${count_and_ip} | awk '{print $1}')
        ip=$(echo ${count_and_ip} | awk '{print $2}')
        count_and_ip_24=$(grep -h $(date --date="-1 hour" +"%d/%b/%Y:%H:") $access_log | grep $domain | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -Eo '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.' | sort | uniq -c | sort -nr | head -n 1 )
        ip_count_24=$(echo ${count_and_ip_24} | awk '{print $1}')
        ip_24=$(echo ${count_and_ip_24} | awk '{print $2}')
        count_and_ip_16=$(grep -h $(date --date="-1 hour" +"%d/%b/%Y:%H:") $access_log | grep $domain | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -Eo '^[0-9]{1,3}\.[0-9]{1,3}\.' | sort | uniq -c | sort -nr | head -n 1 )
        ip_count_16=$(echo ${count_and_ip_16} | awk '{print $1}')
        ip_16=$(echo ${count_and_ip_16} | awk '{print $2}')
        echo "[${count}]${domain} [${ip_count}]${ip} [${ip_count_24}]${ip_24} [${ip_count_16}]${ip_16}" >> apache_output.txt
    done
    column -t < apache_output.txt
    echo ""
    echo "whois check"
    grep -h $(date --date="-1 hour" +"%d/%b/%Y:%H:") $access_log |grep -v $myip | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|[0-9]{1,3}\.0\.0\.0' | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | sort | uniq -c | sort -nr | head -n 10 | while read IP_COUNT IP ; do
    whois_ip=$(whois $IP |grep -i "country" | awk '{print $NF}' |sort | uniq -c | sort -nr | head -n 1 | awk '{print $NF}')
    if [ "$whois_ip" = "JP" ]; then
     whois_ip_print=`printf '\033[31m%s\033[m\n' "JP"`
    else
      whois_ip_print="$whois_ip"
    fi
    aws=`whois $IP |grep -i "aws"`
    echo "$IP_COUNT $IP $whois_ip_print ${aws:+$AWS}"
    done
    echo "-----------------------------------------------------------------------------"
fi

rm -f apache_output.txt
}

change_log_directry() {
access_log_directry=
echo "where access_log directory"
read access_log_directry
access_log_name=$(find $access_log_directry -follow -name "*access_log")
# ログの有無をチェック
if [ -z "$access_log" ] || [ ! -e "$access_log" ]; then
    echo "access_log not found "
else
    echo "次のログを調査します" $access_log_name
    echo "↓"$(date "+%Y/%m/%d %H"時代\(現在時刻\)のアクセス)"↓"
    echo "-----------------------------------------------------------------------------"
    echo "ドメイン 最多IP(/32) 最多IP(/24) 最多IP(/16)" >> apache_output.txt 
    grep -h $(date +"%d/%b/%Y:%H:") $access_log | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -v $myip | awk '{print $2}' | sort | uniq -c | sort -nr | head -n 10 | while read count domain ; do
        count_and_ip=$(grep -h $(date +"%d/%b/%Y:%H:") $access_log | grep $domain | awk '{print $1}' | sort | uniq -c | sort -nr | head -n 1 )
        ip_count=$(echo ${count_and_ip} | awk '{print $1}')
        ip=$(echo ${count_and_ip} | awk '{print $2}')
        count_and_ip_24=$(grep -h $(date +"%d/%b/%Y:%H:") $access_log | grep $domain | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -Eo '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.' | sort | uniq -c | sort -nr | head -n 1 )
        ip_count_24=$(echo ${count_and_ip_24} | awk '{print $1}')
        ip_24=$(echo ${count_and_ip_24} | awk '{print $2}')
        count_and_ip_16=$(grep -h $(date +"%d/%b/%Y:%H:") $access_log | grep $domain | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -Eo '^[0-9]{1,3}\.[0-9]{1,3}\.' | sort | uniq -c | sort -nr | head -n 1 )
        ip_count_16=$(echo ${count_and_ip_16} | awk '{print $1}')
        ip_16=$(echo ${count_and_ip_16} | awk '{print $2}')
        echo "[${count}]${domain} [${ip_count}]${ip} [${ip_count_24}]${ip_24} [${ip_count_16}]${ip_16}" >> apache_output.txt
    done
    column -t < apache_output.txt
    echo ""
    echo "whois check"
    grep -h $(date +"%d/%b/%Y:%H:") $access_log |grep -v $myip | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | sort | uniq -c | sort -nr | head -n 10 | while read IP_COUNT IP ; do
    whois_ip=$(whois $IP |grep -i "country" | awk '{print $NF}' |sort | uniq -c | sort -nr | head -n 1 | awk '{print $NF}')
    if [ "$whois_ip" = "JP" ]; then
     whois_ip_print=`printf '\033[31m%s\033[m\n' "JP"`
    else
      whois_ip_print="$whois_ip"
    fi
    aws=`whois $IP |grep -i "aws"`
    echo "$IP_COUNT $IP $whois_ip_print ${aws:+$AWS}"
    done
    echo "-----------------------------------------------------------------------------"
fi

rm -f apache_output.txt

#１時間前
if [ -z "$access_log" ] || [ ! -e "$access_log" ]; then
    echo "/var/log/httpd/*access_log not found"
else
    echo "↓"$(date --date="-1 hour" "+%Y/%m/%d %H"時代\(現在時刻\)のアクセス)"↓"
    echo "-----------------------------------------------------------------------------"
    echo "ドメイン 最多IP(/32) 最多IP(/24) 最多IP(/16)" >> apache_output.txt 
    grep -h $(date --date="-1 hour" +"%d/%b/%Y:%H:") $access_log | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -v $myip | awk '{print $2}' | sort | uniq -c | sort -nr | head -n 10 | while read count domain ; do
        count_and_ip=$(grep -h $(date --date="-1 hour" +"%d/%b/%Y:%H:") $access_log | grep $domain | awk '{print $1}' | sort | uniq -c | sort -nr | head -n 1 )
        ip_count=$(echo ${count_and_ip} | awk '{print $1}')
        ip=$(echo ${count_and_ip} | awk '{print $2}')
        count_and_ip_24=$(grep -h $(date --date="-1 hour" +"%d/%b/%Y:%H:") $access_log | grep $domain | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -Eo '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.' | sort | uniq -c | sort -nr | head -n 1 )
        ip_count_24=$(echo ${count_and_ip_24} | awk '{print $1}')
        ip_24=$(echo ${count_and_ip_24} | awk '{print $2}')
        count_and_ip_16=$(grep -h $(date --date="-1 hour" +"%d/%b/%Y:%H:") $access_log | grep $domain | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -Eo '^[0-9]{1,3}\.[0-9]{1,3}\.' | sort | uniq -c | sort -nr | head -n 1 )
        ip_count_16=$(echo ${count_and_ip_16} | awk '{print $1}')
        ip_16=$(echo ${count_and_ip_16} | awk '{print $2}')
        echo "[${count}]${domain} [${ip_count}]${ip} [${ip_count_24}]${ip_24} [${ip_count_16}]${ip_16}" >> apache_output.txt
    done
    column -t < apache_output.txt
    echo ""
    echo "whois check"
    grep -h $(date --date="-1 hour" +"%d/%b/%Y:%H:") $access_log |grep -v $myip | grep -Ev '192\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|^[0-9]{1,3}\.0\.0' | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | sort | uniq -c | sort -nr | head -n 10 | while read IP_COUNT IP ; do
    whois_ip=$(whois $IP |grep -i "country" | awk '{print $NF}' |sort | uniq -c | sort -nr | head -n 1 | awk '{print $NF}')
    if [ "$whois_ip" = "JP" ]; then
     whois_ip_print=`printf '\033[31m%s\033[m\n' "JP"`
    else
      whois_ip_print="$whois_ip"
    fi
    aws=`whois $IP |grep -i "aws"`
    echo "$IP_COUNT $IP $whois_ip_print ${aws:+$AWS}"
    done
    echo "-----------------------------------------------------------------------------"
fi

rm -f apache_output.txt
}

case "$1" in
  "")
    default
    ;;
  -d)
    change_log_directry
    ;;
  *)
    echo "Error: Invalid option"
    echo "Usage: $0 [-d] you can change log directry"
    exit 1
    ;;
esac
